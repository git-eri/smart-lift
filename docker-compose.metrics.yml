networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data: {}
  prometheus-data: {}

services:
  frontend:
    build: 
      context: ./frontend
    image: smart-lift-frontend
    container_name: smart-lift-frontend
    restart: unless-stopped
    ports:
      - 8080:80
    environment:
      - TZ=Europe/Berlin
  backend:
    build: 
      context: ./backend
    image: smart-lift-backend
    container_name: smart-lift-backend
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./certs:/code/app/certs
      - ./binaries:/code/app/binaries
    environment:
      - TZ=Europe/Berlin

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    environment:
      - TZ=Europe/Berlin

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./certs/server.crt:/etc/prometheus/server.crt
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitoring
    environment:
      - TZ=Europe/Berlin